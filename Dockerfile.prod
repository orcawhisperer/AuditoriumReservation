FROM node:18-alpine AS builder

WORKDIR /app
COPY package*.json ./
RUN npm ci
COPY . .
# Ensure vite is available for the build process
RUN npm install vite --save
RUN npm run build

FROM node:18-alpine AS runner
WORKDIR /app

# Install SQLite and build dependencies needed for better-sqlite3
RUN apk add --no-cache sqlite python3 make g++ build-base

# Copy package files and install all dependencies
COPY package*.json ./
RUN npm ci

# Also add vite as regular dependency to ensure it's available
RUN npm install vite --save

# Copy built app
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared
COPY --from=builder /app/scripts ./scripts
COPY --from=builder /app/drizzle.config.ts ./drizzle.config.ts
COPY --from=builder /app/tsconfig.json ./tsconfig.json

# Add health check endpoint
RUN echo 'app.get("/health", (_, res) => res.status(200).send("OK"));' >> ./server/routes.ts

# Make init scripts executable
RUN chmod +x /app/scripts/*.sh || true
RUN chmod +x /app/scripts/migrations/*.sh || true

# Add SQLite DB initialization script
RUN echo '#!/bin/sh\necho "Initializing SQLite database..."\nif [ -f /app/scripts/init-db.js ]; then\n  echo "Running database initialization script..."\n  node /app/scripts/init-db.js || exit 1\nfi\n\nif [ -f /app/scripts/migrate-sqlite.ts ]; then\n  echo "Running database migration script..."\n  npx tsx /app/scripts/migrate-sqlite.ts || true\nfi\n\necho "Starting application..."\nnpm start' > /app/docker-entrypoint.sh && \
    chmod +x /app/docker-entrypoint.sh

# Create directory for SQLite database
RUN mkdir -p /app/data

# Create a non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app

USER nodejs
EXPOSE 5000

# Set SQLite database path
ENV SQLITE_FILE=/app/data/shahbaaz.db

ENTRYPOINT ["/app/docker-entrypoint.sh"]